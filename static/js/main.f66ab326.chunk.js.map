{"version":3,"sources":["components/Navbar/Navbar.js","components/ImageResults/ImageResults.js","components/Search/Search.js","App.js","index.js"],"names":["Navbar","react_default","a","createElement","index_es","position","variant","color","ImageResults","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","open","currentImg","handleOpen","img","setState","handleClose","inherits","createClass","key","value","imageListContent","_this2","images","props","_this$state","cols","cellHeight","map","id","src","largeImageURL","alt","title","tags","subtitle","user","actionIcon","onClick","ZoomIn_default","style","react","onClose","Close_default","width","Component","styles","Grid","paddingLeft","paddingRight","marginTop","marginBottom","Search","searchText","amount","apiUrl","process","REACT_APP_BASE_URL","apiKey","selectOptions","onTextChange","e","preventDefault","inputValue","target","defineProperty","name","getImages","onAmountChange","_getImages","asyncToGenerator","regenerator_default","mark","_callee","data","jsonData","wrap","_context","prev","next","fetch","sent","json","hits","t0","console","error","stop","_this$state2","container","item","md","sm","xs","label","placeholder","onChange","fullWidth","htmlFor","inputProps","option","components_ImageResults_ImageResults","App","components_Navbar_Navbar","components_Search_Search","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f66ab326.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\n\nconst Navbar = () => {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\">\n          Pixabay Image Finder\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  IconButton,\n  Dialog,\n  DialogActions,\n  Button\n} from '@material-ui/core';\nimport ZoomIn from '@material-ui/icons/ZoomIn';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport class ImageResults extends Component {\n  state = {\n    open: false,\n    currentImg: ''\n  };\n  handleOpen = img => {\n    this.setState({ open: true, currentImg: img });\n  };\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  render() {\n    let imageListContent;\n    const { images } = this.props;\n    const { open, currentImg } = this.state;\n    if (images) {\n      imageListContent = (\n        <GridList cols={2} cellHeight={350}>\n          {images.map(img => (\n            <GridListTile key={img.id}>\n              <img src={img.largeImageURL} alt=\"\" />\n              <GridListTileBar\n                title={img.tags}\n                subtitle={\n                  <span>\n                    by <strong>{img.user}</strong>\n                  </span>\n                }\n                actionIcon={\n                  <IconButton\n                    onClick={() => this.handleOpen(img.largeImageURL)}>\n                    <ZoomIn style={{ color: 'white' }} />\n                  </IconButton>\n                }\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      );\n    } else {\n      imageListContent = null;\n    }\n\n    return (\n      <Fragment>\n        {imageListContent}\n        <Dialog onClose={this.handleClose} open={open}>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              <CloseIcon />\n            </Button>\n          </DialogActions>\n          <img src={currentImg} alt=\"\" style={{ width: '100%' }} />\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\nImageResults.propTypes = {\n  images: PropTypes.array.isRequired\n};\nexport default ImageResults;\n","import React, { Component } from 'react';\nimport {\n  Grid,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@material-ui/core';\nimport ImageResults from '../ImageResults/ImageResults';\nconst styles = {\n  Grid: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    marginTop: 10,\n    marginBottom: 10\n  }\n};\nexport class Search extends Component {\n  state = {\n    searchText: '',\n    amount: 15,\n    apiUrl: `${process.env.REACT_APP_BASE_URL}`,\n    apiKey: `${process.env.REACT_APP_API_KEY}`,\n    selectOptions: [5, 10, 15, 30, 50],\n    images: []\n  };\n  async getImages() {\n    const { searchText, amount, apiUrl, apiKey } = this.state;\n    try {\n      const data = await fetch(\n        `${apiUrl}/?key=${apiKey}&q=${searchText}&image_type=photo&per_page=${amount}&safesearch=true`\n      );\n      const jsonData = await data.json();\n      this.setState({\n        images: jsonData.hits\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  componentWillMount() {\n    this.getImages();\n  }\n  onTextChange = e => {\n    e.preventDefault();\n    let inputValue = e.target.value;\n    this.setState(\n      {\n        [e.target.name]: inputValue\n      },\n      () => {\n        inputValue === '' ? this.setState({ images: [] }) : this.getImages();\n      }\n    );\n  };\n  onAmountChange = e => {\n    this.setState(\n      {\n        [e.target.name]: e.target.value\n      },\n      () => {\n        this.getImages();\n      }\n    );\n  };\n  render() {\n    const { searchText, amount, selectOptions, images } = this.state;\n    const { onTextChange, onAmountChange } = this;\n    return (\n      <Grid container>\n        <Grid item md={6} sm={12} xs={12} style={styles.Grid}>\n          <TextField\n            label=\"Search for Images\"\n            placeholder=\"Enter picture you want to see...\"\n            name=\"searchText\"\n            value={searchText}\n            onChange={onTextChange}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={12} xs={12} style={styles.Grid}>\n          <FormControl style={{ width: '100%' }}>\n            <InputLabel htmlFor=\"amount-id\">Amount</InputLabel>\n            <Select\n              value={amount}\n              onChange={onAmountChange}\n              inputProps={{\n                name: 'amount'\n              }}>\n              {selectOptions.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        {images.length ? (\n          <ImageResults images={this.state.images} />\n        ) : (\n          <div>No pictures found, plese try again</div>\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component, Fragment } from 'react';\n\nimport Navbar from './components/Navbar/Navbar';\nimport Search from './components/Search/Search';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Navbar />\n        <Search />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}